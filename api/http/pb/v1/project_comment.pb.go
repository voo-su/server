// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: v1/project_comment.proto

package v1_pb

import (
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectCommentCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id" label:"task_id"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty" form:"comment" label:"comment"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectCommentCreateRequest) Reset() {
	*x = ProjectCommentCreateRequest{}
	mi := &file_v1_project_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCommentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCommentCreateRequest) ProtoMessage() {}

func (x *ProjectCommentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCommentCreateRequest.ProtoReflect.Descriptor instead.
func (*ProjectCommentCreateRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_comment_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectCommentCreateRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ProjectCommentCreateRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ProjectCommentCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectCommentCreateResponse) Reset() {
	*x = ProjectCommentCreateResponse{}
	mi := &file_v1_project_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCommentCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCommentCreateResponse) ProtoMessage() {}

func (x *ProjectCommentCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCommentCreateResponse.ProtoReflect.Descriptor instead.
func (*ProjectCommentCreateResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_comment_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectCommentCreateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ProjectCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id" label:"task_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectCommentRequest) Reset() {
	*x = ProjectCommentRequest{}
	mi := &file_v1_project_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCommentRequest) ProtoMessage() {}

func (x *ProjectCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCommentRequest.ProtoReflect.Descriptor instead.
func (*ProjectCommentRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_comment_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectCommentRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type ProjectCommentResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Items         []*ProjectCommentResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectCommentResponse) Reset() {
	*x = ProjectCommentResponse{}
	mi := &file_v1_project_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCommentResponse) ProtoMessage() {}

func (x *ProjectCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCommentResponse.ProtoReflect.Descriptor instead.
func (*ProjectCommentResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_comment_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectCommentResponse) GetItems() []*ProjectCommentResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ProjectCommentResponse_User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Avatar        string                 `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Surname       string                 `protobuf:"bytes,5,opt,name=surname,proto3" json:"surname"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectCommentResponse_User) Reset() {
	*x = ProjectCommentResponse_User{}
	mi := &file_v1_project_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCommentResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCommentResponse_User) ProtoMessage() {}

func (x *ProjectCommentResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCommentResponse_User.ProtoReflect.Descriptor instead.
func (*ProjectCommentResponse_User) Descriptor() ([]byte, []int) {
	return file_v1_project_comment_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ProjectCommentResponse_User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectCommentResponse_User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ProjectCommentResponse_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ProjectCommentResponse_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectCommentResponse_User) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

type ProjectCommentResponse_Item struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Id            int64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	TaskId        string                       `protobuf:"bytes,2,opt,name=taskId,proto3" json:"task_id"`
	Comment       string                       `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment"`
	User          *ProjectCommentResponse_User `protobuf:"bytes,4,opt,name=user,proto3" json:"user"`
	CreatedAt     string                       `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectCommentResponse_Item) Reset() {
	*x = ProjectCommentResponse_Item{}
	mi := &file_v1_project_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCommentResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCommentResponse_Item) ProtoMessage() {}

func (x *ProjectCommentResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCommentResponse_Item.ProtoReflect.Descriptor instead.
func (*ProjectCommentResponse_Item) Descriptor() ([]byte, []int) {
	return file_v1_project_comment_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ProjectCommentResponse_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectCommentResponse_Item) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ProjectCommentResponse_Item) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ProjectCommentResponse_Item) GetUser() *ProjectCommentResponse_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ProjectCommentResponse_Item) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

var File_v1_project_comment_proto protoreflect.FileDescriptor

const file_v1_project_comment_proto_rawDesc = "" +
	"\n" +
	"\x18v1/project_comment.proto\x12\x02v1\x1a\x13tagger/tagger.proto\"\xad\x01\n" +
	"\x1bProjectCommentCreateRequest\x12O\n" +
	"\atask_id\x18\x01 \x01(\tB6\x9a\x84\x9e\x031form:\"task_id\" binding:\"required\" label:\"task_id\"R\x06taskId\x12=\n" +
	"\acomment\x18\x02 \x01(\tB#\x9a\x84\x9e\x03\x1eform:\"comment\" label:\"comment\"R\acomment\">\n" +
	"\x1cProjectCommentCreateResponse\x12\x1e\n" +
	"\x02id\x18\x01 \x01(\x03B\x0e\x9a\x84\x9e\x03\tjson:\"id\"R\x02id\"h\n" +
	"\x15ProjectCommentRequest\x12O\n" +
	"\atask_id\x18\x01 \x01(\tB6\x9a\x84\x9e\x031form:\"task_id\" binding:\"required\" label:\"task_id\"R\x06taskId\"\xc1\x04\n" +
	"\x16ProjectCommentResponse\x12H\n" +
	"\x05items\x18\x01 \x03(\v2\x1f.v1.ProjectCommentResponse.ItemB\x11\x9a\x84\x9e\x03\fjson:\"items\"R\x05items\x1a\xd9\x01\n" +
	"\x04User\x12\x1e\n" +
	"\x02id\x18\x01 \x01(\x03B\x0e\x9a\x84\x9e\x03\tjson:\"id\"R\x02id\x12*\n" +
	"\x06avatar\x18\x02 \x01(\tB\x12\x9a\x84\x9e\x03\rjson:\"avatar\"R\x06avatar\x120\n" +
	"\busername\x18\x03 \x01(\tB\x14\x9a\x84\x9e\x03\x0fjson:\"username\"R\busername\x12$\n" +
	"\x04name\x18\x04 \x01(\tB\x10\x9a\x84\x9e\x03\vjson:\"name\"R\x04name\x12-\n" +
	"\asurname\x18\x05 \x01(\tB\x13\x9a\x84\x9e\x03\x0ejson:\"surname\"R\asurname\x1a\x80\x02\n" +
	"\x04Item\x12\x1e\n" +
	"\x02id\x18\x01 \x01(\x03B\x0e\x9a\x84\x9e\x03\tjson:\"id\"R\x02id\x12+\n" +
	"\x06taskId\x18\x02 \x01(\tB\x13\x9a\x84\x9e\x03\x0ejson:\"task_id\"R\x06taskId\x12-\n" +
	"\acomment\x18\x03 \x01(\tB\x13\x9a\x84\x9e\x03\x0ejson:\"comment\"R\acomment\x12E\n" +
	"\x04user\x18\x04 \x01(\v2\x1f.v1.ProjectCommentResponse.UserB\x10\x9a\x84\x9e\x03\vjson:\"user\"R\x04user\x125\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tB\x16\x9a\x84\x9e\x03\x11json:\"created_at\"R\tcreatedAtB\fZ\n" +
	"./v1;v1_pbb\x06proto3"

var (
	file_v1_project_comment_proto_rawDescOnce sync.Once
	file_v1_project_comment_proto_rawDescData []byte
)

func file_v1_project_comment_proto_rawDescGZIP() []byte {
	file_v1_project_comment_proto_rawDescOnce.Do(func() {
		file_v1_project_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_project_comment_proto_rawDesc), len(file_v1_project_comment_proto_rawDesc)))
	})
	return file_v1_project_comment_proto_rawDescData
}

var file_v1_project_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_project_comment_proto_goTypes = []any{
	(*ProjectCommentCreateRequest)(nil),  // 0: v1.ProjectCommentCreateRequest
	(*ProjectCommentCreateResponse)(nil), // 1: v1.ProjectCommentCreateResponse
	(*ProjectCommentRequest)(nil),        // 2: v1.ProjectCommentRequest
	(*ProjectCommentResponse)(nil),       // 3: v1.ProjectCommentResponse
	(*ProjectCommentResponse_User)(nil),  // 4: v1.ProjectCommentResponse.User
	(*ProjectCommentResponse_Item)(nil),  // 5: v1.ProjectCommentResponse.Item
}
var file_v1_project_comment_proto_depIdxs = []int32{
	5, // 0: v1.ProjectCommentResponse.items:type_name -> v1.ProjectCommentResponse.Item
	4, // 1: v1.ProjectCommentResponse.Item.user:type_name -> v1.ProjectCommentResponse.User
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_project_comment_proto_init() }
func file_v1_project_comment_proto_init() {
	if File_v1_project_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_project_comment_proto_rawDesc), len(file_v1_project_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_project_comment_proto_goTypes,
		DependencyIndexes: file_v1_project_comment_proto_depIdxs,
		MessageInfos:      file_v1_project_comment_proto_msgTypes,
	}.Build()
	File_v1_project_comment_proto = out.File
	file_v1_project_comment_proto_goTypes = nil
	file_v1_project_comment_proto_depIdxs = nil
}
