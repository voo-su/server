// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.25.1
// source: v1/chat.proto

package v1_pb

import (
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogType int32 `protobuf:"varint,1,opt,name=dialog_type,json=dialogType,proto3" json:"dialog_type,omitempty" binding:"required,oneof=1 2"`
	ReceiverId int32 `protobuf:"varint,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty" binding:"required"`
}

func (x *ChatCreateRequest) Reset() {
	*x = ChatCreateRequest{}
	mi := &file_v1_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCreateRequest) ProtoMessage() {}

func (x *ChatCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCreateRequest.ProtoReflect.Descriptor instead.
func (*ChatCreateRequest) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatCreateRequest) GetDialogType() int32 {
	if x != nil {
		return x.DialogType
	}
	return 0
}

func (x *ChatCreateRequest) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

type ChatCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DialogType int32  `protobuf:"varint,2,opt,name=dialog_type,json=dialogType,proto3" json:"dialog_type,omitempty"`
	ReceiverId int32  `protobuf:"varint,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	IsTop      int32  `protobuf:"varint,4,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	IsDisturb  int32  `protobuf:"varint,5,opt,name=is_disturb,json=isDisturb,proto3" json:"is_disturb,omitempty"`
	IsOnline   int32  `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	IsBot      int32  `protobuf:"varint,7,opt,name=is_bot,json=isBot,proto3" json:"is_bot,omitempty"`
	Username   string `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`
	Name       string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Surname    string `protobuf:"bytes,10,opt,name=surname,proto3" json:"surname,omitempty"`
	Avatar     string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`
	UnreadNum  int32  `protobuf:"varint,12,opt,name=unread_num,json=unreadNum,proto3" json:"unread_num,omitempty"`
	MsgText    string `protobuf:"bytes,13,opt,name=msg_text,json=msgText,proto3" json:"msg_text,omitempty"`
	UpdatedAt  string `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	RemarkName string `protobuf:"bytes,15,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"`
}

func (x *ChatCreateResponse) Reset() {
	*x = ChatCreateResponse{}
	mi := &file_v1_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCreateResponse) ProtoMessage() {}

func (x *ChatCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCreateResponse.ProtoReflect.Descriptor instead.
func (*ChatCreateResponse) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatCreateResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChatCreateResponse) GetDialogType() int32 {
	if x != nil {
		return x.DialogType
	}
	return 0
}

func (x *ChatCreateResponse) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *ChatCreateResponse) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *ChatCreateResponse) GetIsDisturb() int32 {
	if x != nil {
		return x.IsDisturb
	}
	return 0
}

func (x *ChatCreateResponse) GetIsOnline() int32 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *ChatCreateResponse) GetIsBot() int32 {
	if x != nil {
		return x.IsBot
	}
	return 0
}

func (x *ChatCreateResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChatCreateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatCreateResponse) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *ChatCreateResponse) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ChatCreateResponse) GetUnreadNum() int32 {
	if x != nil {
		return x.UnreadNum
	}
	return 0
}

func (x *ChatCreateResponse) GetMsgText() string {
	if x != nil {
		return x.MsgText
	}
	return ""
}

func (x *ChatCreateResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ChatCreateResponse) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

type ChatItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DialogType int32  `protobuf:"varint,2,opt,name=dialog_type,json=dialogType,proto3" json:"dialog_type,omitempty"`
	ReceiverId int32  `protobuf:"varint,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	Username   string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Avatar     string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Surname    string `protobuf:"bytes,7,opt,name=surname,proto3" json:"surname,omitempty"`
	UnreadNum  int32  `protobuf:"varint,8,opt,name=unread_num,json=unreadNum,proto3" json:"unread_num,omitempty"`
	MsgText    string `protobuf:"bytes,9,opt,name=msg_text,json=msgText,proto3" json:"msg_text,omitempty"`
	UpdatedAt  string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsTop      int32  `protobuf:"varint,11,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	IsDisturb  int32  `protobuf:"varint,12,opt,name=is_disturb,json=isDisturb,proto3" json:"is_disturb,omitempty"`
	IsOnline   int32  `protobuf:"varint,13,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	IsBot      int32  `protobuf:"varint,14,opt,name=is_bot,json=isBot,proto3" json:"is_bot,omitempty"`
	Remark     string `protobuf:"bytes,15,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ChatItem) Reset() {
	*x = ChatItem{}
	mi := &file_v1_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatItem) ProtoMessage() {}

func (x *ChatItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatItem.ProtoReflect.Descriptor instead.
func (*ChatItem) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChatItem) GetDialogType() int32 {
	if x != nil {
		return x.DialogType
	}
	return 0
}

func (x *ChatItem) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *ChatItem) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChatItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ChatItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatItem) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *ChatItem) GetUnreadNum() int32 {
	if x != nil {
		return x.UnreadNum
	}
	return 0
}

func (x *ChatItem) GetMsgText() string {
	if x != nil {
		return x.MsgText
	}
	return ""
}

func (x *ChatItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ChatItem) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *ChatItem) GetIsDisturb() int32 {
	if x != nil {
		return x.IsDisturb
	}
	return 0
}

func (x *ChatItem) GetIsOnline() int32 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *ChatItem) GetIsBot() int32 {
	if x != nil {
		return x.IsBot
	}
	return 0
}

func (x *ChatItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ChatListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ChatItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ChatListResponse) Reset() {
	*x = ChatListResponse{}
	mi := &file_v1_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatListResponse) ProtoMessage() {}

func (x *ChatListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatListResponse.ProtoReflect.Descriptor instead.
func (*ChatListResponse) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ChatListResponse) GetItems() []*ChatItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ChatDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32 `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty" binding:"required"`
}

func (x *ChatDeleteRequest) Reset() {
	*x = ChatDeleteRequest{}
	mi := &file_v1_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatDeleteRequest) ProtoMessage() {}

func (x *ChatDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatDeleteRequest.ProtoReflect.Descriptor instead.
func (*ChatDeleteRequest) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ChatDeleteRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

type ChatDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChatDeleteResponse) Reset() {
	*x = ChatDeleteResponse{}
	mi := &file_v1_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatDeleteResponse) ProtoMessage() {}

func (x *ChatDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatDeleteResponse.ProtoReflect.Descriptor instead.
func (*ChatDeleteResponse) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{5}
}

type ChatTopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListId int32 `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty" binding:"required"`
	Type   int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty" binding:"required,oneof=1 2"`
}

func (x *ChatTopRequest) Reset() {
	*x = ChatTopRequest{}
	mi := &file_v1_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTopRequest) ProtoMessage() {}

func (x *ChatTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTopRequest.ProtoReflect.Descriptor instead.
func (*ChatTopRequest) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ChatTopRequest) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *ChatTopRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ChatTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChatTopResponse) Reset() {
	*x = ChatTopResponse{}
	mi := &file_v1_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTopResponse) ProtoMessage() {}

func (x *ChatTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTopResponse.ProtoReflect.Descriptor instead.
func (*ChatTopResponse) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{7}
}

type ChatDisturbRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogType int32 `protobuf:"varint,1,opt,name=dialog_type,json=dialogType,proto3" json:"dialog_type,omitempty" binding:"required,oneof=1 2"`
	ReceiverId int32 `protobuf:"varint,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty" binding:"required"`
	IsDisturb  int32 `protobuf:"varint,3,opt,name=is_disturb,json=isDisturb,proto3" json:"is_disturb,omitempty" binding:"oneof=0 1"`
}

func (x *ChatDisturbRequest) Reset() {
	*x = ChatDisturbRequest{}
	mi := &file_v1_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatDisturbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatDisturbRequest) ProtoMessage() {}

func (x *ChatDisturbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatDisturbRequest.ProtoReflect.Descriptor instead.
func (*ChatDisturbRequest) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{8}
}

func (x *ChatDisturbRequest) GetDialogType() int32 {
	if x != nil {
		return x.DialogType
	}
	return 0
}

func (x *ChatDisturbRequest) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *ChatDisturbRequest) GetIsDisturb() int32 {
	if x != nil {
		return x.IsDisturb
	}
	return 0
}

type ChatDisturbResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChatDisturbResponse) Reset() {
	*x = ChatDisturbResponse{}
	mi := &file_v1_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatDisturbResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatDisturbResponse) ProtoMessage() {}

func (x *ChatDisturbResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatDisturbResponse.ProtoReflect.Descriptor instead.
func (*ChatDisturbResponse) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{9}
}

type ChatClearUnreadNumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogType int32 `protobuf:"varint,1,opt,name=dialog_type,json=dialogType,proto3" json:"dialog_type,omitempty" binding:"required,oneof=1 2"`
	ReceiverId int32 `protobuf:"varint,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty" binding:"required"`
}

func (x *ChatClearUnreadNumRequest) Reset() {
	*x = ChatClearUnreadNumRequest{}
	mi := &file_v1_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatClearUnreadNumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatClearUnreadNumRequest) ProtoMessage() {}

func (x *ChatClearUnreadNumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatClearUnreadNumRequest.ProtoReflect.Descriptor instead.
func (*ChatClearUnreadNumRequest) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{10}
}

func (x *ChatClearUnreadNumRequest) GetDialogType() int32 {
	if x != nil {
		return x.DialogType
	}
	return 0
}

func (x *ChatClearUnreadNumRequest) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

type ChatClearUnreadNumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChatClearUnreadNumResponse) Reset() {
	*x = ChatClearUnreadNumResponse{}
	mi := &file_v1_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatClearUnreadNumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatClearUnreadNumResponse) ProtoMessage() {}

func (x *ChatClearUnreadNumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatClearUnreadNumResponse.ProtoReflect.Descriptor instead.
func (*ChatClearUnreadNumResponse) Descriptor() ([]byte, []int) {
	return file_v1_chat_proto_rawDescGZIP(), []int{11}
}

var File_v1_chat_proto protoreflect.FileDescriptor

var file_v1_chat_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x76, 0x31, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x21, 0x9a, 0x84, 0x9e, 0x03, 0x1c, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x3d, 0x31, 0x20, 0x32, 0x22, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xac, 0x03, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62,
	0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x03, 0x0a, 0x08,
	0x43, 0x68, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x73, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62,
	0x6f, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x36, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x45, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x79, 0x0a, 0x0e,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x21,
	0x9a, 0x84, 0x9e, 0x03, 0x1c, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x3d, 0x31, 0x20, 0x32,
	0x22, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x12, 0x43,
	0x68, 0x61, 0x74, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x21, 0x9a, 0x84, 0x9e, 0x03, 0x1c, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x3d, 0x31, 0x20, 0x32, 0x22, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03,
	0x12, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x22, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x18, 0x9a, 0x84, 0x9e, 0x03, 0x13, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x3a, 0x22, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x3d, 0x30, 0x20, 0x31, 0x22, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x74,
	0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x99, 0x01, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x21, 0x9a, 0x84, 0x9e, 0x03, 0x1c, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x3d, 0x31, 0x20, 0x32, 0x22, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52,
	0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_chat_proto_rawDescOnce sync.Once
	file_v1_chat_proto_rawDescData = file_v1_chat_proto_rawDesc
)

func file_v1_chat_proto_rawDescGZIP() []byte {
	file_v1_chat_proto_rawDescOnce.Do(func() {
		file_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_chat_proto_rawDescData)
	})
	return file_v1_chat_proto_rawDescData
}

var file_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_chat_proto_goTypes = []any{
	(*ChatCreateRequest)(nil),          // 0: v1.ChatCreateRequest
	(*ChatCreateResponse)(nil),         // 1: v1.ChatCreateResponse
	(*ChatItem)(nil),                   // 2: v1.ChatItem
	(*ChatListResponse)(nil),           // 3: v1.ChatListResponse
	(*ChatDeleteRequest)(nil),          // 4: v1.ChatDeleteRequest
	(*ChatDeleteResponse)(nil),         // 5: v1.ChatDeleteResponse
	(*ChatTopRequest)(nil),             // 6: v1.ChatTopRequest
	(*ChatTopResponse)(nil),            // 7: v1.ChatTopResponse
	(*ChatDisturbRequest)(nil),         // 8: v1.ChatDisturbRequest
	(*ChatDisturbResponse)(nil),        // 9: v1.ChatDisturbResponse
	(*ChatClearUnreadNumRequest)(nil),  // 10: v1.ChatClearUnreadNumRequest
	(*ChatClearUnreadNumResponse)(nil), // 11: v1.ChatClearUnreadNumResponse
}
var file_v1_chat_proto_depIdxs = []int32{
	2, // 0: v1.ChatListResponse.items:type_name -> v1.ChatItem
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_chat_proto_init() }
func file_v1_chat_proto_init() {
	if File_v1_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_chat_proto_goTypes,
		DependencyIndexes: file_v1_chat_proto_depIdxs,
		MessageInfos:      file_v1_chat_proto_msgTypes,
	}.Build()
	File_v1_chat_proto = out.File
	file_v1_chat_proto_rawDesc = nil
	file_v1_chat_proto_goTypes = nil
	file_v1_chat_proto_depIdxs = nil
}
