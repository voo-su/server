// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.25.1
// source: v1/project_task.proto

package v1_pb

import (
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectTaskCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   int64  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" binding:"required" form:"project_id"`
	TypeId      int64  `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ProjectTaskCreateRequest) Reset() {
	*x = ProjectTaskCreateRequest{}
	mi := &file_v1_project_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskCreateRequest) ProtoMessage() {}

func (x *ProjectTaskCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskCreateRequest.ProtoReflect.Descriptor instead.
func (*ProjectTaskCreateRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectTaskCreateRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ProjectTaskCreateRequest) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ProjectTaskCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProjectTaskCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProjectTaskCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectTaskCreateResponse) Reset() {
	*x = ProjectTaskCreateResponse{}
	mi := &file_v1_project_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskCreateResponse) ProtoMessage() {}

func (x *ProjectTaskCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskCreateResponse.ProtoReflect.Descriptor instead.
func (*ProjectTaskCreateResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectTaskCreateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ProjectTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId int64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" binding:"required" form:"project_id"`
}

func (x *ProjectTaskRequest) Reset() {
	*x = ProjectTaskRequest{}
	mi := &file_v1_project_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskRequest) ProtoMessage() {}

func (x *ProjectTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskRequest.ProtoReflect.Descriptor instead.
func (*ProjectTaskRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectTaskRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ProjectTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*ProjectTaskResponse_Categories `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *ProjectTaskResponse) Reset() {
	*x = ProjectTaskResponse{}
	mi := &file_v1_project_task_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskResponse) ProtoMessage() {}

func (x *ProjectTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskResponse.ProtoReflect.Descriptor instead.
func (*ProjectTaskResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectTaskResponse) GetCategories() []*ProjectTaskResponse_Categories {
	if x != nil {
		return x.Categories
	}
	return nil
}

type ProjectExecutorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id"`
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty" binding:"required" form:"member_id"`
}

func (x *ProjectExecutorRequest) Reset() {
	*x = ProjectExecutorRequest{}
	mi := &file_v1_project_task_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectExecutorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectExecutorRequest) ProtoMessage() {}

func (x *ProjectExecutorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectExecutorRequest.ProtoReflect.Descriptor instead.
func (*ProjectExecutorRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectExecutorRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProjectExecutorRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type ProjectExecutorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectExecutorResponse) Reset() {
	*x = ProjectExecutorResponse{}
	mi := &file_v1_project_task_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectExecutorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectExecutorResponse) ProtoMessage() {}

func (x *ProjectExecutorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectExecutorResponse.ProtoReflect.Descriptor instead.
func (*ProjectExecutorResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{5}
}

type ProjectTaskMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId int64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" binding:"required" form:"project_id"`
	TaskId    int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id"`
	FromId    int64 `protobuf:"varint,3,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty" binding:"required" form:"from_id"`
	ToId      int64 `protobuf:"varint,4,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty" binding:"required" form:"to_id"`
}

func (x *ProjectTaskMoveRequest) Reset() {
	*x = ProjectTaskMoveRequest{}
	mi := &file_v1_project_task_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskMoveRequest) ProtoMessage() {}

func (x *ProjectTaskMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskMoveRequest.ProtoReflect.Descriptor instead.
func (*ProjectTaskMoveRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectTaskMoveRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ProjectTaskMoveRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProjectTaskMoveRequest) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *ProjectTaskMoveRequest) GetToId() int64 {
	if x != nil {
		return x.ToId
	}
	return 0
}

type ProjectTaskMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectTaskMoveResponse) Reset() {
	*x = ProjectTaskMoveResponse{}
	mi := &file_v1_project_task_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskMoveResponse) ProtoMessage() {}

func (x *ProjectTaskMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskMoveResponse.ProtoReflect.Descriptor instead.
func (*ProjectTaskMoveResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{7}
}

type ProjectTaskDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id"`
}

func (x *ProjectTaskDetailRequest) Reset() {
	*x = ProjectTaskDetailRequest{}
	mi := &file_v1_project_task_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskDetailRequest) ProtoMessage() {}

func (x *ProjectTaskDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskDetailRequest.ProtoReflect.Descriptor instead.
func (*ProjectTaskDetailRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectTaskDetailRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ProjectTaskDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string                            `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   string                            `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Assigner    *ProjectTaskDetailResponse_Member `protobuf:"bytes,4,opt,name=assigner,proto3" json:"assigner,omitempty"`
	Executor    *ProjectTaskDetailResponse_Member `protobuf:"bytes,5,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (x *ProjectTaskDetailResponse) Reset() {
	*x = ProjectTaskDetailResponse{}
	mi := &file_v1_project_task_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskDetailResponse) ProtoMessage() {}

func (x *ProjectTaskDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskDetailResponse.ProtoReflect.Descriptor instead.
func (*ProjectTaskDetailResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectTaskDetailResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProjectTaskDetailResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectTaskDetailResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProjectTaskDetailResponse) GetAssigner() *ProjectTaskDetailResponse_Member {
	if x != nil {
		return x.Assigner
	}
	return nil
}

func (x *ProjectTaskDetailResponse) GetExecutor() *ProjectTaskDetailResponse_Member {
	if x != nil {
		return x.Executor
	}
	return nil
}

type ProjectTaskTypeNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" binding:"required" form:"name"`
}

func (x *ProjectTaskTypeNameRequest) Reset() {
	*x = ProjectTaskTypeNameRequest{}
	mi := &file_v1_project_task_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskTypeNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskTypeNameRequest) ProtoMessage() {}

func (x *ProjectTaskTypeNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskTypeNameRequest.ProtoReflect.Descriptor instead.
func (*ProjectTaskTypeNameRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{10}
}

func (x *ProjectTaskTypeNameRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProjectTaskTypeNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProjectTaskTypeNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectTaskTypeNameResponse) Reset() {
	*x = ProjectTaskTypeNameResponse{}
	mi := &file_v1_project_task_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskTypeNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskTypeNameResponse) ProtoMessage() {}

func (x *ProjectTaskTypeNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskTypeNameResponse.ProtoReflect.Descriptor instead.
func (*ProjectTaskTypeNameResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{11}
}

type ProjectCoexecutorInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    int64  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id"`
	MemberIds string `protobuf:"bytes,2,opt,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty" binding:"required" form:"member_ids"`
}

func (x *ProjectCoexecutorInviteRequest) Reset() {
	*x = ProjectCoexecutorInviteRequest{}
	mi := &file_v1_project_task_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCoexecutorInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCoexecutorInviteRequest) ProtoMessage() {}

func (x *ProjectCoexecutorInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCoexecutorInviteRequest.ProtoReflect.Descriptor instead.
func (*ProjectCoexecutorInviteRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectCoexecutorInviteRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProjectCoexecutorInviteRequest) GetMemberIds() string {
	if x != nil {
		return x.MemberIds
	}
	return ""
}

type ProjectCoexecutorInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectCoexecutorInviteResponse) Reset() {
	*x = ProjectCoexecutorInviteResponse{}
	mi := &file_v1_project_task_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCoexecutorInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCoexecutorInviteResponse) ProtoMessage() {}

func (x *ProjectCoexecutorInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCoexecutorInviteResponse.ProtoReflect.Descriptor instead.
func (*ProjectCoexecutorInviteResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{13}
}

type ProjectCoexecutorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id"`
}

func (x *ProjectCoexecutorsRequest) Reset() {
	*x = ProjectCoexecutorsRequest{}
	mi := &file_v1_project_task_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCoexecutorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCoexecutorsRequest) ProtoMessage() {}

func (x *ProjectCoexecutorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCoexecutorsRequest.ProtoReflect.Descriptor instead.
func (*ProjectCoexecutorsRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{14}
}

func (x *ProjectCoexecutorsRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ProjectCoexecutorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ProjectCoexecutorsResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ProjectCoexecutorsResponse) Reset() {
	*x = ProjectCoexecutorsResponse{}
	mi := &file_v1_project_task_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCoexecutorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCoexecutorsResponse) ProtoMessage() {}

func (x *ProjectCoexecutorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCoexecutorsResponse.ProtoReflect.Descriptor instead.
func (*ProjectCoexecutorsResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{15}
}

func (x *ProjectCoexecutorsResponse) GetItems() []*ProjectCoexecutorsResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ProjectWatcherInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    int64  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id"`
	MemberIds string `protobuf:"bytes,2,opt,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty" binding:"required" form:"member_ids"`
}

func (x *ProjectWatcherInviteRequest) Reset() {
	*x = ProjectWatcherInviteRequest{}
	mi := &file_v1_project_task_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectWatcherInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectWatcherInviteRequest) ProtoMessage() {}

func (x *ProjectWatcherInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectWatcherInviteRequest.ProtoReflect.Descriptor instead.
func (*ProjectWatcherInviteRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{16}
}

func (x *ProjectWatcherInviteRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProjectWatcherInviteRequest) GetMemberIds() string {
	if x != nil {
		return x.MemberIds
	}
	return ""
}

type ProjectWatcherInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectWatcherInviteResponse) Reset() {
	*x = ProjectWatcherInviteResponse{}
	mi := &file_v1_project_task_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectWatcherInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectWatcherInviteResponse) ProtoMessage() {}

func (x *ProjectWatcherInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectWatcherInviteResponse.ProtoReflect.Descriptor instead.
func (*ProjectWatcherInviteResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{17}
}

type ProjectWatchersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty" binding:"required" form:"task_id"`
}

func (x *ProjectWatchersRequest) Reset() {
	*x = ProjectWatchersRequest{}
	mi := &file_v1_project_task_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectWatchersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectWatchersRequest) ProtoMessage() {}

func (x *ProjectWatchersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectWatchersRequest.ProtoReflect.Descriptor instead.
func (*ProjectWatchersRequest) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{18}
}

func (x *ProjectWatchersRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ProjectWatchersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ProjectWatchersResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ProjectWatchersResponse) Reset() {
	*x = ProjectWatchersResponse{}
	mi := &file_v1_project_task_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectWatchersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectWatchersResponse) ProtoMessage() {}

func (x *ProjectWatchersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectWatchersResponse.ProtoReflect.Descriptor instead.
func (*ProjectWatchersResponse) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{19}
}

func (x *ProjectWatchersResponse) GetItems() []*ProjectWatchersResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ProjectTaskResponse_Tasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ProjectTaskResponse_Tasks) Reset() {
	*x = ProjectTaskResponse_Tasks{}
	mi := &file_v1_project_task_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskResponse_Tasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskResponse_Tasks) ProtoMessage() {}

func (x *ProjectTaskResponse_Tasks) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskResponse_Tasks.ProtoReflect.Descriptor instead.
func (*ProjectTaskResponse_Tasks) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ProjectTaskResponse_Tasks) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectTaskResponse_Tasks) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ProjectTaskResponse_Categories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string                       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Tasks []*ProjectTaskResponse_Tasks `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *ProjectTaskResponse_Categories) Reset() {
	*x = ProjectTaskResponse_Categories{}
	mi := &file_v1_project_task_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskResponse_Categories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskResponse_Categories) ProtoMessage() {}

func (x *ProjectTaskResponse_Categories) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskResponse_Categories.ProtoReflect.Descriptor instead.
func (*ProjectTaskResponse_Categories) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ProjectTaskResponse_Categories) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectTaskResponse_Categories) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProjectTaskResponse_Categories) GetTasks() []*ProjectTaskResponse_Tasks {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type ProjectTaskDetailResponse_Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *ProjectTaskDetailResponse_Member) Reset() {
	*x = ProjectTaskDetailResponse_Member{}
	mi := &file_v1_project_task_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectTaskDetailResponse_Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTaskDetailResponse_Member) ProtoMessage() {}

func (x *ProjectTaskDetailResponse_Member) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTaskDetailResponse_Member.ProtoReflect.Descriptor instead.
func (*ProjectTaskDetailResponse_Member) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ProjectTaskDetailResponse_Member) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectTaskDetailResponse_Member) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ProjectCoexecutorsResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *ProjectCoexecutorsResponse_Item) Reset() {
	*x = ProjectCoexecutorsResponse_Item{}
	mi := &file_v1_project_task_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCoexecutorsResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCoexecutorsResponse_Item) ProtoMessage() {}

func (x *ProjectCoexecutorsResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCoexecutorsResponse_Item.ProtoReflect.Descriptor instead.
func (*ProjectCoexecutorsResponse_Item) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ProjectCoexecutorsResponse_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectCoexecutorsResponse_Item) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ProjectWatchersResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *ProjectWatchersResponse_Item) Reset() {
	*x = ProjectWatchersResponse_Item{}
	mi := &file_v1_project_task_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectWatchersResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectWatchersResponse_Item) ProtoMessage() {}

func (x *ProjectWatchersResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_v1_project_task_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectWatchersResponse_Item.ProtoReflect.Descriptor instead.
func (*ProjectWatchersResponse_Item) Descriptor() ([]byte, []int) {
	return file_v1_project_task_proto_rawDescGZIP(), []int{19, 0}
}

func (x *ProjectWatchersResponse_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectWatchersResponse_Item) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

var File_v1_project_task_proto protoreflect.FileDescriptor

var file_v1_project_task_proto_rawDesc = []byte{
	0x0a, 0x15, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x13, 0x74, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb5, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x29, 0x9a, 0x84, 0x9e, 0x03, 0x24, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x29, 0x9a, 0x84, 0x9e, 0x03, 0x24, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a,
	0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x1a, 0x2d, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x1a, 0x67, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26, 0x9a, 0x84, 0x9e, 0x03, 0x21, 0x66, 0x6f, 0x72, 0x6d,
	0x3a, 0x22, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x28, 0x9a, 0x84, 0x9e, 0x03, 0x23, 0x66,
	0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x20,
	0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x22, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x29, 0x9a, 0x84, 0x9e, 0x03, 0x24, 0x66, 0x6f, 0x72,
	0x6d, 0x3a, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x22, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26, 0x9a,
	0x84, 0x9e, 0x03, 0x21, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26,
	0x9a, 0x84, 0x9e, 0x03, 0x21, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x24, 0x9a,
	0x84, 0x9e, 0x03, 0x1f, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x22,
	0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x22, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x26, 0x9a, 0x84, 0x9e, 0x03, 0x21, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x22, 0xac, 0x02, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x08,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x1a, 0x34, 0x0a, 0x06, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x96, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x26, 0x9a, 0x84, 0x9e, 0x03, 0x21, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23,
	0x9a, 0x84, 0x9e, 0x03, 0x1e, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26, 0x9a, 0x84,
	0x9e, 0x03, 0x21, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0a,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x29, 0x9a, 0x84, 0x9e, 0x03, 0x24, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x19, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26, 0x9a, 0x84, 0x9e, 0x03, 0x21, 0x66, 0x6f,
	0x72, 0x6d, 0x3a, 0x22, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x62, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x1a, 0x32, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26, 0x9a, 0x84, 0x9e, 0x03, 0x21, 0x66, 0x6f, 0x72,
	0x6d, 0x3a, 0x22, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0x9a, 0x84, 0x9e, 0x03,
	0x24, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x22, 0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x22, 0x1e, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x59, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26, 0x9a, 0x84, 0x9e,
	0x03, 0x21, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22,
	0x20, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x22, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a,
	0x32, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x5f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_project_task_proto_rawDescOnce sync.Once
	file_v1_project_task_proto_rawDescData = file_v1_project_task_proto_rawDesc
)

func file_v1_project_task_proto_rawDescGZIP() []byte {
	file_v1_project_task_proto_rawDescOnce.Do(func() {
		file_v1_project_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_project_task_proto_rawDescData)
	})
	return file_v1_project_task_proto_rawDescData
}

var file_v1_project_task_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_v1_project_task_proto_goTypes = []any{
	(*ProjectTaskCreateRequest)(nil),         // 0: v1.ProjectTaskCreateRequest
	(*ProjectTaskCreateResponse)(nil),        // 1: v1.ProjectTaskCreateResponse
	(*ProjectTaskRequest)(nil),               // 2: v1.ProjectTaskRequest
	(*ProjectTaskResponse)(nil),              // 3: v1.ProjectTaskResponse
	(*ProjectExecutorRequest)(nil),           // 4: v1.ProjectExecutorRequest
	(*ProjectExecutorResponse)(nil),          // 5: v1.ProjectExecutorResponse
	(*ProjectTaskMoveRequest)(nil),           // 6: v1.ProjectTaskMoveRequest
	(*ProjectTaskMoveResponse)(nil),          // 7: v1.ProjectTaskMoveResponse
	(*ProjectTaskDetailRequest)(nil),         // 8: v1.ProjectTaskDetailRequest
	(*ProjectTaskDetailResponse)(nil),        // 9: v1.ProjectTaskDetailResponse
	(*ProjectTaskTypeNameRequest)(nil),       // 10: v1.ProjectTaskTypeNameRequest
	(*ProjectTaskTypeNameResponse)(nil),      // 11: v1.ProjectTaskTypeNameResponse
	(*ProjectCoexecutorInviteRequest)(nil),   // 12: v1.ProjectCoexecutorInviteRequest
	(*ProjectCoexecutorInviteResponse)(nil),  // 13: v1.ProjectCoexecutorInviteResponse
	(*ProjectCoexecutorsRequest)(nil),        // 14: v1.ProjectCoexecutorsRequest
	(*ProjectCoexecutorsResponse)(nil),       // 15: v1.ProjectCoexecutorsResponse
	(*ProjectWatcherInviteRequest)(nil),      // 16: v1.ProjectWatcherInviteRequest
	(*ProjectWatcherInviteResponse)(nil),     // 17: v1.ProjectWatcherInviteResponse
	(*ProjectWatchersRequest)(nil),           // 18: v1.ProjectWatchersRequest
	(*ProjectWatchersResponse)(nil),          // 19: v1.ProjectWatchersResponse
	(*ProjectTaskResponse_Tasks)(nil),        // 20: v1.ProjectTaskResponse.Tasks
	(*ProjectTaskResponse_Categories)(nil),   // 21: v1.ProjectTaskResponse.Categories
	(*ProjectTaskDetailResponse_Member)(nil), // 22: v1.ProjectTaskDetailResponse.Member
	(*ProjectCoexecutorsResponse_Item)(nil),  // 23: v1.ProjectCoexecutorsResponse.Item
	(*ProjectWatchersResponse_Item)(nil),     // 24: v1.ProjectWatchersResponse.Item
}
var file_v1_project_task_proto_depIdxs = []int32{
	21, // 0: v1.ProjectTaskResponse.categories:type_name -> v1.ProjectTaskResponse.Categories
	22, // 1: v1.ProjectTaskDetailResponse.assigner:type_name -> v1.ProjectTaskDetailResponse.Member
	22, // 2: v1.ProjectTaskDetailResponse.executor:type_name -> v1.ProjectTaskDetailResponse.Member
	23, // 3: v1.ProjectCoexecutorsResponse.items:type_name -> v1.ProjectCoexecutorsResponse.Item
	24, // 4: v1.ProjectWatchersResponse.items:type_name -> v1.ProjectWatchersResponse.Item
	20, // 5: v1.ProjectTaskResponse.Categories.tasks:type_name -> v1.ProjectTaskResponse.Tasks
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_v1_project_task_proto_init() }
func file_v1_project_task_proto_init() {
	if File_v1_project_task_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_project_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_project_task_proto_goTypes,
		DependencyIndexes: file_v1_project_task_proto_depIdxs,
		MessageInfos:      file_v1_project_task_proto_msgTypes,
	}.Build()
	File_v1_project_task_proto = out.File
	file_v1_project_task_proto_rawDesc = nil
	file_v1_project_task_proto_goTypes = nil
	file_v1_project_task_proto_depIdxs = nil
}
