// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: upload.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
	common "voo.su/api/grpc/pb/common"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SaveFilePartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`       // Unique file id (the same for all parts of a single file)
	FilePart      int32                  `protobuf:"varint,2,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"` // File part number (starting from 0)
	Bytes         []byte                 `protobuf:"bytes,3,opt,name=bytes,proto3" json:"bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveFilePartRequest) Reset() {
	*x = SaveFilePartRequest{}
	mi := &file_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveFilePartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFilePartRequest) ProtoMessage() {}

func (x *SaveFilePartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFilePartRequest.ProtoReflect.Descriptor instead.
func (*SaveFilePartRequest) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{0}
}

func (x *SaveFilePartRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *SaveFilePartRequest) GetFilePart() int32 {
	if x != nil {
		return x.FilePart
	}
	return 0
}

func (x *SaveFilePartRequest) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type SaveFilePartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveFilePartResponse) Reset() {
	*x = SaveFilePartResponse{}
	mi := &file_upload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveFilePartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFilePartResponse) ProtoMessage() {}

func (x *SaveFilePartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFilePartResponse.ProtoReflect.Descriptor instead.
func (*SaveFilePartResponse) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{1}
}

func (x *SaveFilePartResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetFileRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Offset int64                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"` // Number of bytes to be skipped
	Limit  int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // Number of bytes to be returned
	// Types that are valid to be assigned to Location:
	//
	//	*GetFileRequest_DocumentLocation
	Location      isGetFileRequest_Location `protobuf_oneof:"location"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	mi := &file_upload_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{2}
}

func (x *GetFileRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetFileRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetFileRequest) GetLocation() isGetFileRequest_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GetFileRequest) GetDocumentLocation() *common.InputDocumentFileLocation {
	if x != nil {
		if x, ok := x.Location.(*GetFileRequest_DocumentLocation); ok {
			return x.DocumentLocation
		}
	}
	return nil
}

type isGetFileRequest_Location interface {
	isGetFileRequest_Location()
}

type GetFileRequest_DocumentLocation struct {
	DocumentLocation *common.InputDocumentFileLocation `protobuf:"bytes,3,opt,name=document_location,json=documentLocation,proto3,oneof"`
}

func (*GetFileRequest_DocumentLocation) isGetFileRequest_Location() {}

type GetFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bytes         []byte                 `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileResponse) Reset() {
	*x = GetFileResponse{}
	mi := &file_upload_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileResponse) ProtoMessage() {}

func (x *GetFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_upload_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileResponse.ProtoReflect.Descriptor instead.
func (*GetFileResponse) Descriptor() ([]byte, []int) {
	return file_upload_proto_rawDescGZIP(), []int{3}
}

func (x *GetFileResponse) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

var File_upload_proto protoreflect.FileDescriptor

const file_upload_proto_rawDesc = "" +
	"\n" +
	"\fupload.proto\x12\x06upload\x1a\x13common/common.proto\"a\n" +
	"\x13SaveFilePartRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x1b\n" +
	"\tfile_part\x18\x02 \x01(\x05R\bfilePart\x12\x14\n" +
	"\x05bytes\x18\x03 \x01(\fR\x05bytes\"0\n" +
	"\x14SaveFilePartResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x9c\x01\n" +
	"\x0eGetFileRequest\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12P\n" +
	"\x11document_location\x18\x03 \x01(\v2!.common.InputDocumentFileLocationH\x00R\x10documentLocationB\n" +
	"\n" +
	"\blocation\"'\n" +
	"\x0fGetFileResponse\x12\x14\n" +
	"\x05bytes\x18\x01 \x01(\fR\x05bytes2\x96\x01\n" +
	"\rUploadService\x12I\n" +
	"\fSaveFilePart\x12\x1b.upload.SaveFilePartRequest\x1a\x1c.upload.SaveFilePartResponse\x12:\n" +
	"\aGetFile\x12\x16.upload.GetFileRequest\x1a\x17.upload.GetFileResponseB\x1eZ\x1cvoo.su/api/grpc/pb/upload;pbb\x06proto3"

var (
	file_upload_proto_rawDescOnce sync.Once
	file_upload_proto_rawDescData []byte
)

func file_upload_proto_rawDescGZIP() []byte {
	file_upload_proto_rawDescOnce.Do(func() {
		file_upload_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_upload_proto_rawDesc), len(file_upload_proto_rawDesc)))
	})
	return file_upload_proto_rawDescData
}

var file_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_upload_proto_goTypes = []any{
	(*SaveFilePartRequest)(nil),              // 0: upload.SaveFilePartRequest
	(*SaveFilePartResponse)(nil),             // 1: upload.SaveFilePartResponse
	(*GetFileRequest)(nil),                   // 2: upload.GetFileRequest
	(*GetFileResponse)(nil),                  // 3: upload.GetFileResponse
	(*common.InputDocumentFileLocation)(nil), // 4: common.InputDocumentFileLocation
}
var file_upload_proto_depIdxs = []int32{
	4, // 0: upload.GetFileRequest.document_location:type_name -> common.InputDocumentFileLocation
	0, // 1: upload.UploadService.SaveFilePart:input_type -> upload.SaveFilePartRequest
	2, // 2: upload.UploadService.GetFile:input_type -> upload.GetFileRequest
	1, // 3: upload.UploadService.SaveFilePart:output_type -> upload.SaveFilePartResponse
	3, // 4: upload.UploadService.GetFile:output_type -> upload.GetFileResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_upload_proto_init() }
func file_upload_proto_init() {
	if File_upload_proto != nil {
		return
	}
	file_upload_proto_msgTypes[2].OneofWrappers = []any{
		(*GetFileRequest_DocumentLocation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_upload_proto_rawDesc), len(file_upload_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_upload_proto_goTypes,
		DependencyIndexes: file_upload_proto_depIdxs,
		MessageInfos:      file_upload_proto_msgTypes,
	}.Build()
	File_upload_proto = out.File
	file_upload_proto_goTypes = nil
	file_upload_proto_depIdxs = nil
}
