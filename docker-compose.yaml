services:
  nginx:
    container_name: nginx
    image: nginx:1.27.3
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./deployments/nginx/nginx.conf:/etc/nginx/nginx.conf

  web:
    container_name: web
    build:
      context: ./web
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .env:/usr/src/voo-su/.env
    ports:
      - 80:80
    networks:
      - network-voo
    depends_on:
      - http_server
      - ws_server

  http_server:
    container_name: http-server
    build:
      context: ./
      dockerfile: deployments/Dockerfile
    command: /usr/bin/voo-su http
    restart: always
    volumes:
      - ./configs/voo-su.yaml:/etc/voo-su/voo-su.yaml
    ports:
      - 8000:8000
    networks:
      - network-voo
    depends_on:
      - postgres
      - redis
      - clickhouse
      - minio
      - nats

  ws_server:
    container_name: ws-server
    build:
      context: ./
      dockerfile: deployments/Dockerfile
    command: /usr/bin/voo-su ws
    restart: always
    volumes:
      - ./configs/voo-su.yaml:/etc/voo-su/voo-su.yaml
    ports:
      - 8001:8001
    networks:
      - network-voo
    depends_on:
      - postgres
      - redis
      - clickhouse
      - minio
      - nats

  postgres:
    container_name: postgres
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: voo_su
    volumes:
      - ./storage/db/postgres/:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - network-voo

  redis:
    container_name: redis
    image: redis:7.4
    restart: always
    ports:
      - 6379:6379
    networks:
      - network-voo

  clickhouse:
    container_name: clickhouse
    image: clickhouse/clickhouse-server:24.8
    environment:
      - CLICKHOUSE_USER=clickhouse
      - CLICKHOUSE_PASSWORD=clickhouse
      - CLICKHOUSE_DB=voo_su
    volumes:
      - ./storage/db/clickhouse/:/var/lib/clickhouse:cached
    ports:
      - 9000:9000
    networks:
      - network-voo

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z.fips
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: user_minio
    command: server --address ":9001" --console-address ":9002" /data
    volumes:
      - ./storage/db/minio/:/data
    ports:
      - 9001:9001
      - 9002:9002
    networks:
      - network-voo

  nats:
    image: nats:2.10.24
    ports:
      - 4222:4222
    networks:
      - network-voo

networks:
  network-voo:
    driver: bridge
